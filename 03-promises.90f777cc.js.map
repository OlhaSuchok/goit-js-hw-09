{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAMM,cACtC,IAAIC,EAAW,EACXC,EAAcC,OAAOC,SAASL,EAAOM,OACrCC,EAAaH,OAAOC,SAASP,EAAMQ,OACnCE,EAAYJ,OAAOC,SAASN,EAAKO,OAErCG,WAAaC,aAAY,KAmB3B,IAAuBC,EAAUd,EAlB7BK,GAAY,EACZK,GAAcC,EACdL,GAAe,GAgBIQ,EAdLT,EAceL,EAdLU,EAenB,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUd,IAEpBiB,EAAO,C,SAAEH,E,MAAUd,GAAQ,GAE5BA,EAAM,KAtBNsB,MAAK,EAACR,SAAEA,EAAQd,MAAEA,MACjBP,EAAA8B,OAAOC,QAAQ,uBAAqBV,QAAiBd,MAAU,IAEhEyB,OAAM,EAACX,SAAEA,EAAQd,MAAEA,MAClBP,EAAA8B,OAAOG,QAAQ,sBAAoBZ,QAAed,MAAU,IAG5C,IAAhBM,GACFqB,cAAcf,WAAW,GAE1BF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let position = 0;\n  let amountValue = Number.parseInt(amount.value);\n  let delayValue = Number.parseInt(delay.value);\n  let stepValue = Number.parseInt(step.value);\n\n  intervalId = setInterval(() => {\n    position += 1;\n    delayValue += stepValue;\n    amountValue -= 1;\n\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (amountValue === 0) {\n      clearInterval(intervalId);\n    }\n  }, delayValue);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","delay1","step","amount","currentTarget","position1","amountValue","Number","parseInt","value","delayValue","stepValue","intervalId","setInterval","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.90f777cc.js.map"}