{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAA9BC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAW,EACXC,EAAcC,OAAOC,SAASJ,EAAOK,OACrCC,EAAaH,OAAOC,SAASP,EAAMQ,OACnCE,EAAYJ,OAAOC,SAASL,EAAKM,OAErCG,WAAaC,aAAY,WAmB3B,IAAuBC,EAAUZ,EAhB7BI,GAAe,GAgBIQ,EAlBnBT,GAAY,EAkBiBH,EAjB7BQ,GAAcC,EAkBT,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUZ,UAEpBe,EAAO,CAAEH,WAAUZ,S,GAEpBA,E,KAtBAoB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUZ,EAAKqB,EAALrB,MACjBV,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUZ,EAAKqB,EAALrB,MAClBV,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANxB,EAAM,M,IAG1C,IAAhBI,GACFuB,cAAcjB,W,GAEfF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let position = 0;\n  let amountValue = Number.parseInt(amount.value);\n  let delayValue = Number.parseInt(delay.value);\n  let stepValue = Number.parseInt(step.value);\n\n  intervalId = setInterval(() => {\n    position += 1;\n    delayValue += stepValue;\n    amountValue -= 1;\n\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (amountValue === 0) {\n      clearInterval(intervalId);\n    }\n  }, delayValue);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_currentTarget","currentTarget","delay1","delay","step","amount","position1","amountValue","Number","parseInt","value","delayValue","stepValue","intervalId","setInterval","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","Notify","success","concat","catch","failure","clearInterval"],"version":3,"file":"03-promises.55cf6408.js.map"}